<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!-- Connection information -->
		<property name="hibernate.connection.username">project1user</property>
		<property name="hibernate.connection.password">p4ssw0rd</property>
		<property name="hibernate.connection.url">jdbc:postgresql://joeydb.cpthsxeojuz1.us-east-2.rds.amazonaws.com:5432/project1db</property>
		<property name="hibernate.connection.driver_class">org.postgresql.Driver</property>
		
		<!-- Additional hibernate properties -->
		<property name="hibernate.connection.dialect">org.hibernate.dialect.PostgreSQLDialect</property>
		<property name="hibernate.show_sql">false</property>
		<property name="hibernate.format_sql">false</property>
		
		<!-- Connection pool, an optimization of hibernate, to speed up db calls, hibernate will open the number of connections we specify in the connection pool property -->
		<!-- Everytime a session is created it will receive an already open connection from the connection pool, the individual connection will  not be closed until the session is closed -->
		<property name="hibernate.connection.pool_size">10</property>
		
		<!-- hbm2ddl.auto, important, it is a hibernate property that controls how hibernate can affect our database schema -->
		<!-- CREATE will drop all existing tables and other existing schema that is mapped by annotations or xml files, then will recreate from scratch -->
		<!-- UPDATE will not alter existing schema, but will create new tables if needed -->
		<!-- VALIDATE hibernate will check to make sure the schema exists as expected but does not create any new tables -->
		<!-- NONE, it will not alter or create the tables -->
		<property name="hibernate.hbm2ddl.auto">update</property>
		
		<mapping class="com.example.model.reimbtype"></mapping>
		<mapping class="com.example.model.reimbstatus"></mapping>
		<mapping class="com.example.model.userrole"></mapping>
		<mapping class="com.example.model.user"></mapping>
		<mapping class="com.example.model.ersreimb"></mapping>
		<!--  
		<mapping class="com.example.model.SuperVillain"></mapping>
		<mapping class="com.example.model.Crime"></mapping>
		-->
		
	</session-factory>

</hibernate-configuration>